/*
 * Copyright 2016 Thomas Nappo
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
	ext.project_name = 'Arrowhead'
	ext.project_description = 'Straightforward native interfacing from Kotlin'
	ext.project_group = 'org.jire.arrowhead'
	ext.project_artifact = 'arrowhead'
	ext.project_version = '1.3.5'
	
	ext.kotlin_version = '1.1.1'
	ext.jna_version = '4.4.0'
	
	repositories {
		mavenCentral()
		jcenter()
	}
	
	dependencies {
		classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
	}
}

group project_group
version project_version


apply plugin: 'java'
apply plugin: 'kotlin'

task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = 'sources'
	from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
	classifier = 'javadoc'
	from javadoc.destinationDir
}

repositories {
	mavenCentral()
}

dependencies {
	compile group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib', version: kotlin_version
	compile group: 'org.jetbrains.kotlin', name: 'kotlin-reflect', version: kotlin_version

	compile group: 'net.java.dev.jna', name: 'jna', version: jna_version
	compile group: 'net.java.dev.jna', name: 'jna-platform', version: jna_version
	
	compile group: 'it.unimi.dsi', name: 'fastutil', version: '7.1.0'
}

task fatJar(type: Jar) {
	manifest {
		attributes 'Implementation-Title': 'Arrowhead',
				'Implementation-Version': version,
				'Main-Class': 'org.fire.arrowhead'
	}
	baseName = project.name + '-all'
	from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
	with jar
}